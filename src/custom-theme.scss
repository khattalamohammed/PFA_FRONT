
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


$primaryColor: (
  50 : #e1f6f1,
  100 : #b3e8db,
  200 : #80d9c4,
  300 : #4dcaac,
  400 : #27be9a,
  500 : #01b388,
  600 : #01ac80,
  700 : #01a375,
  800 : #019a6b,
  900 : #008b58,
  A100 : #b7ffe0,
  A200 : #84ffcb,
  A400 : #51ffb5,
  A700 : #37ffaa,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #000000,
      500 : #ffffff,
      600 : #ffffff,
      700 : #ffffff,
      800 : #ffffff,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #000000,
      A700 : #000000,)
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$netplant-primary: mat.define-palette($primaryColor,500);
$netplant-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$netplant-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$netplant-theme: mat.define-light-theme((
  color: (
    primary: $netplant-primary,
    accent: $netplant-accent,
    warn: $netplant-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($netplant-theme);



